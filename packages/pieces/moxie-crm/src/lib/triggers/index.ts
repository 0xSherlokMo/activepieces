import { moxieCRMRegisterTrigger } from './register-trigger';
export const enum MoxieCRMEventType {
  CLIENT_CREATED = 'ClientCreate',
  CLIENT_UPDATED = 'ClientUpdate',
  CLIENT_DELETED = 'ClientDelete',
  PROJECT_CREATED = 'ProjectCreate',
  PROJECT_UPDATED = 'ProjectUpdate',
  PROJECT_COMPLETED = 'ProjectComplete',
}

const MoxieCRMWebhookSampleData = {
  PROJECT_EVENT_SAMPLE_DATA: {
    id: '6434749e852ec5116d546759',
    accountId: 10016,
    sampleData: false,
    clientId: '64230b34bd4bbd275c1f1739',
    name: 'Design & Development of Website',
    description: null,
    active: true,
    startDate: '2023-05-16',
    dueDate: '2023-06-06',
    dateCreated: '2023-04-10T20:42:06.572Z',
    client: {
      accountId: 10016,
      sampleData: false,
      id: '64230b34bd4bbd275c1f1739',
      clientType: 'Client',
      name: 'Moxie',
      initials: 'MOX1',
      locality: 'CO',
      country: null,
      color: '#3BDBBE',
      projects: [],
      hourlyAmount: 0,
      archive: false,
      currency: 'AUD',
      logo: 'https://t3.gstatic.com/faviconV2?client=SOCIAL&type=FAVICON&fallback_opts=TYPE,SIZE,URL&url=https://www.withmoxie.com&size=64',
      leadSource: 'Google',
      contact: null,
    },
    leadGenArchived: false,
    feeSchedule: {
      feeType: 'Fixed Price',
      amount: 5000,
      retainerSchedule: null,
      estimateMax: null,
      estimateMin: null,
      retainerStart: null,
      retainerTiming: 'Advanced',
      retainerOverageRate: null,
      taxable: false,
      fromProposalId: null,
      fromProposalSignedDate: null,
      updatedDate: '2023-04-10T20:42:16.141Z',
      updatedBy: 'G. Mina',
    },
    proposalId: null,
    proposalName: null,
    hexColor: '#3BDBBEFF',
    portalAccess: 'Overview',
    showTimeWorkedInPortal: true,
    files: [],
    deliverables: [],
  },
  CLIENT_EVENT_SAMPLE_DATA: {
    id: '63c5ea0c840e3207033931b5',
    accountId: 10016,
    name: 'Moxie',
    clientType: 'Client',
    initials: 'MOX',
    address1: '123 Any Street',
    address2: 'Suite 100',
    city: 'Anytown',
    locality: 'NY',
    postal: '12345',
    country: 'US',
    website: 'www.withmoxie.com',
    phone: '+18887231235',
    color: '#CE62E9',
    logo: 'https://t3.gstatic.com/faviconV2?client=SOCIAL&type=FAVICON&fallback_opts=TYPE,SIZE,URL&url=https://www.withmoxie.com&size=64',
    s3LogoFile: null,
    taxId: '1212121212',
    leadSource: 'PPC',
    archive: false,
    leadGenArchived: false,
    paymentTerms: {
      paymentDays: 7,
      latePaymentFee: 5,
      depositAmount: 50,
      depositType: 'Percentage',
      whoPaysCardFees: 'Freelancer',
      fromProposalId: '640b60752a524d1c45b6c528',
      fromProposalSignedDate: '2023-03-14T14:41:01.908Z',
      updatedDate: '2023-04-04T16:17:27.315Z',
      updatedBy: 'G. Mina',
    },
    payInstructions: null,
    hourlyAmount: 100,
    roundingIncrement: 1,
    currency: 'USD',
    lastInvoiceRunDate: null,
    nextInvoiceRunDate: null,
    importRecordId: null,
    integrationKeys: {
      quickbooksId: null,
      xeroId: null,
    },
    files: [],
    comments: [],
    created: '2023-01-17T00:21:32.663Z',
    sampleData: false,
    stripeClientId: 'cus_NFTM1mAFkgtfUI',
    notes: null,
    notifyOnCreate: null,
    contacts: [
      {
        id: '63d431ab3813ca3d0789d2cc',
        accountId: 10016,
        clientId: '63c5ea0c840e3207033931b5',
        clientPortalUserId: -66,
        firstName: 'Jeffrey',
        lastName: 'Marna',
        role: null,
        phone: null,
        email: 'geoff.mina@withmoxie.com',
        mobile: null,
        notes: null,
        defaultContact: true,
        invoiceContact: false,
        portalAccess: true,
        importRecordId: null,
        sampleData: null,
      },
    ],
  },
};

export const moxieCRMTriggers = [
  {
    name: 'client_created',
    displayName: 'Client Created',
    description: 'Triggerd when a new client is created.',
    eventType: MoxieCRMEventType.CLIENT_CREATED,
    sampleData: MoxieCRMWebhookSampleData.CLIENT_EVENT_SAMPLE_DATA,
  },
  {
    name: 'client_updated',
    displayName: 'Client Updated',
    description: 'Triggerd when an existing client is updated.',
    eventType: MoxieCRMEventType.CLIENT_UPDATED,
    sampleData: MoxieCRMWebhookSampleData.CLIENT_EVENT_SAMPLE_DATA,
  },
  {
    name: 'client_deleted',
    displayName: 'Client Deleted',
    description: 'Triggerd when an existing client is deleted.',
    eventType: MoxieCRMEventType.CLIENT_DELETED,
    sampleData: MoxieCRMWebhookSampleData.CLIENT_EVENT_SAMPLE_DATA,
  },
  {
    name: 'project_created',
    displayName: 'Project Created',
    description: 'Triggerd when a new project is created.',
    eventType: MoxieCRMEventType.PROJECT_CREATED,
    sampleData: MoxieCRMWebhookSampleData.PROJECT_EVENT_SAMPLE_DATA,
  },
  {
    name: 'project_updated',
    displayName: 'Project Updated',
    description: 'Triggerd when an existing project is updated.',
    eventType: MoxieCRMEventType.PROJECT_UPDATED,
    sampleData: MoxieCRMWebhookSampleData.PROJECT_EVENT_SAMPLE_DATA,
  },
  {
    name: 'project_completed',
    displayName: 'Project Completed',
    description: 'Triggerd when an existing project is completed.',
    eventType: MoxieCRMEventType.PROJECT_COMPLETED,
    sampleData: MoxieCRMWebhookSampleData.PROJECT_EVENT_SAMPLE_DATA,
  },
].map((props) => moxieCRMRegisterTrigger(props));
